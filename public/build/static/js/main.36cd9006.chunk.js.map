{"version":3,"sources":["assets/SmartMacrosLogo.png","assets/SmartMacrosLogo.mp4","Components/Navbar/index.js","Components/Card/index.js","Services/variables.js","Services/alimentosService.js","Components/Alimentos/index.js","Services/authService.js","Components/AuthForm/index.js","Components/Landing/index.js","Components/Forms/AlimentoForm/index.js","Components/Forms/RecetaForm/index.js","Components/Forms/ActualizarUsuarioForm/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","user","className","uk-navbar","_id","to","src","logo","alt","type","uk-grid","name","avatar","uk-dropdown","uk-icon","onClick","Card","Nombre","Porcion","Unidad_de_medida","Grasas","Carbohidratos","Proteinas","Calorias_kcal","class","base_url","createAlimento","alimento","axios","post","Alimentos","state","alimentos","get","then","res","console","log","data","result","setState","this","length","map","index","key","uk-alert","Component","defaults","withCredentials","login","credentials","signup","AuthForm","handleSubmit","e","preventDefault","props","location","pathname","localStorage","setItem","JSON","stringify","handleChange","target","value","isLogin","onSubmit","onChange","id","required","placeholder","defaultValue","LandingPage","cover","autoPlay","loop","muted","playsInline","uk-cover","AlimentoForm","htmlFor","rows","RecetaForm","receta","ActualizarUsuarioForm","usuario","Routes","exact","path","component","App","Boolean","window","hostname","match","UIkit","use","Icons","WithRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,0LC8G5BC,EA1GA,WACb,IAAMC,EAAO,GAEb,OACE,gCACE,yBACEC,UAAU,6DACVC,YAAU,QAETF,EAAKG,IACJ,yBAAKF,UAAU,4DACb,wBAAIA,UAAU,iBACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAAMG,GAAG,QAAQH,UAAU,iCACzB,yBAAKI,IAAKC,IAAMC,IAAI,0BAM5B,yBAAKN,UAAU,6BACb,wBAAIA,UAAU,iBACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAAMG,GAAG,KACT,yBAAKH,UAAU,GAAGI,IAAKC,IAAMC,IAAI,0BAOxCP,EAAKG,IACJ,yBAAKF,UAAU,mBACb,wBAAIA,UAAU,iBACZ,4BACE,yBAAKA,UAAU,aACb,4BACEA,UAAU,kCACVO,KAAK,UAEL,yBACEP,UAAU,+BACVQ,UAAQ,QAER,yBAAKR,UAAU,iBACb,yBACEA,UAAU,mBACVM,IAAKP,EAAKU,KACVL,IAAKL,EAAKW,QAAU,2DAGxB,yBAAKV,UAAU,mBACb,yBAAKA,UAAU,mCACZD,EAAKU,QAGL,KAET,yBAAKE,cAAY,uBACf,wBAAIX,UAAU,0BACZ,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAMG,GAAG,YACP,0BACEH,UAAU,wBACVY,UAAQ,eACD,IAJX,YASF,wBAAIZ,UAAU,gBAAgBa,QApEnC,cAqEO,kBAAC,IAAD,CAAMV,GAAG,IACP,0BACEH,UAAU,wBACVY,UAAQ,mBAHZ,iBAed,yBAAKZ,UAAU,mBACb,wBAAIA,UAAU,iBACZ,4BACE,kBAAC,IAAD,CAAMG,GAAG,WAAT,eAIF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,wB,4CC7DDW,EAlCF,SAAC,GAAD,IACXC,EADW,EACXA,OACAC,EAFW,EAEXA,QACAC,EAHW,EAGXA,iBACAC,EAJW,EAIXA,OACAC,EALW,EAKXA,cACAC,EANW,EAMXA,UACAC,EAPW,EAOXA,cAPW,OASX,yBAAKrB,UAAU,8BAA8BQ,UAAQ,QACnD,6BACE,yBAAKR,UAAU,qDACb,wBAAIA,UAAU,cAAce,GAC5B,uDACA,wBAAIO,MAAM,mDACR,mDAAyBD,EAAzB,SACA,8CAAoBF,EAApB,OACA,0CAAgBC,EAAhB,OACA,uCAAaF,EAAb,QAEF,uBAAGlB,UAAU,2BAAb,aACagB,EADb,IACuBC,GAEvB,yBAAKjB,UAAU,0BACf,kBAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,2BAAvB,qB,iBC1BKuB,EACT,yCCKSC,EAAiB,SAACC,GAC3B,OAAOC,IAAMC,KAAN,UAAcJ,EAAd,mBAAyCE,ICkCrCG,E,4MArCbC,MAAQ,CACNC,UAAW,I,kEAKQ,IAAD,ODPXJ,IAAMK,IAAN,UAAaR,EAAb,gBCQUS,MAAK,SAAAC,GAClBC,QAAQC,IAAIF,GADa,IAGTH,EAAaG,EAAIG,KAAzBC,OACR,EAAKC,SAAS,CAAER,mB,+BAKpB,OACE,6BAAS9B,UAAU,cACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,0DACZuC,KAAKV,MAAMC,UAAUU,OAAS,EAC7BD,KAAKV,MAAMC,UAAUW,KAAI,SAAChB,EAAUiB,GAAX,OACvB,kBAAC,EAAD,eAAMC,IAAKD,GAAWjB,OAGxB,yBAAKzB,UAAU,mBAAmB4C,WAAS,QACzC,gDACA,kG,GA5BQC,a,eCDxBnB,IAAMoB,SAASC,iBAAkB,EAE1B,IAAMC,EAAQ,SAACC,GAClB,OAAOvB,IAAMC,KAAN,UAAcJ,EAAd,gBAAsC0B,IAGpCC,EAAS,SAACD,GACnB,OAAOvB,IAAMC,KAAN,UAAcJ,EAAd,iBAAuC0B,ICyQnCE,E,4MA9QbtB,MAAQ,CACN9B,KAAM,I,EAGRqD,aAAe,SAACC,GACdA,EAAEC,iBADkB,IAEZvD,EAAS,EAAK8B,MAAd9B,MACyC,WAAjC,EAAKwD,MAAMC,SAASC,SACXT,EAAQE,GAC1BnD,GAAMiC,MAAK,SAACC,GAAQ,IAEjBlC,EAASkC,EAAIG,KAAbrC,KACR2D,aAAaC,QAAQ,OAAQC,KAAKC,UAAU9D,Q,EAGhD+D,aAAe,SAACT,GAAO,IACftD,EAAS,EAAK8B,MAAd9B,KACNA,EAAI,eAAQA,EAAR,eAAesD,EAAEU,OAAOtD,KAAO4C,EAAEU,OAAOC,QAC5C,EAAK1B,SAAS,CAAEvC,U,uDAGhB,IAAMkE,EAA2C,WAAjC1B,KAAKgB,MAAMC,SAASC,SACpC,OACE,yBAAKzD,UAAU,aACb,yBAAKA,UAAU,mBACZiE,EACC,yBAAKjE,UAAU,UACb,0BAAMkE,SAAU3B,KAAKa,aAAcpD,UAAU,gBAC3C,wBAAIA,UAAU,SAAd,qBAGA,yBAAKA,UAAU,eACb,uBAAGA,UAAU,gBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,QACL2D,GAAG,QACHC,UAAU,EACV9D,KAAK,QACL+D,YAAY,YAKhB,yBAAKtE,UAAU,eACb,uBAAGA,UAAU,gBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,WACL2D,GAAG,WACHC,UAAU,EACV9D,KAAK,WACL+D,YAAY,mBAGhB,2BAAO/D,KAAK,SAASyD,MAAM,QAAQhE,UAAU,gBAIjD,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,SAAd,iBACA,0BAAMkE,SAAU3B,KAAKa,aAAcpD,UAAU,gBAE3C,yBAAKA,UAAU,sBACb,uBAAGA,UAAU,gBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,SACL2D,GAAG,SACH7D,KAAK,OACL+D,YAAY,SACZD,UAAU,KAKd,yBAAKrE,UAAU,sBACb,uBAAGA,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,QACL2D,GAAG,QACH7D,KAAK,QACL+D,YAAY,SACZD,UAAU,KAKd,yBAAKrE,UAAU,sBACb,uBAAGA,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,WACL2D,GAAG,WACH7D,KAAK,WACL+D,YAAY,gBACZD,UAAU,KAKd,4BACErE,UAAU,iCACVS,KAAK,OACL2D,GAAG,OACHD,SAAU5B,KAAKuB,aACfO,UAAU,GAEV,4BAAQE,aAAa,QAArB,QACA,4CACA,8CAIF,yBAAKvE,UAAU,sBACb,uBAAGA,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,OACL2D,GAAG,OACH7D,KAAK,SACL+D,YAAY,OACZD,UAAU,KAKd,yBAAKrE,UAAU,sBACb,uBAAGA,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,YACL2D,GAAG,YACH7D,KAAK,SACL+D,YAAY,iBACZD,UAAU,KAKd,yBAAKrE,UAAU,sBACb,uBAAGA,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,UACL2D,GAAG,UACH7D,KAAK,SACL+D,YAAY,aACZD,UAAU,KAKd,4BACErE,UAAU,iCACVS,KAAK,qBACL2D,GAAG,qBACHD,SAAU5B,KAAKuB,aACfO,UAAU,GAEV,4BAAQE,aAAa,QAArB,aACA,wCACA,4CACA,wCACA,4CACA,gDAIF,4BACEvE,UAAU,iCACVS,KAAK,WACL2D,GAAG,WACHD,SAAU5B,KAAKuB,aACfO,UAAU,GAEV,4BAAQE,aAAa,QAArB,YACA,+CACA,0DACA,iDACA,4DACA,kDAIF,4BACEvE,UAAU,iCACVS,KAAK,oBACL2D,GAAG,oBACHD,SAAU5B,KAAKuB,aACfO,UAAU,GAEV,4BAAQE,aAAa,QAArB,WACA,qCACA,qCACA,qCACA,qCACA,sCAIF,yBAAKvE,UAAU,iCACb,4BACEA,UAAU,oEACVS,KAAK,gBACL2D,GAAG,gBACHD,SAAU5B,KAAKuB,aACfO,UAAU,GAEV,4BAAQE,aAAa,QAArB,SACA,4CACA,+CACA,kDACA,qDACA,+CAEF,4BAAQhE,KAAK,SAASP,UAAU,aAAhC,oBAUZ,yBAAKA,UAAU,oBACZiE,EACC,yBAAKjE,UAAU,oBACb,yBAAKA,UAAU,WACb,4DACA,uBAAGA,UAAU,mBAAb,8LAKA,kBAAC,IAAD,CAAMG,GAAG,WACP,4BAAQH,UAAU,kBAAkBoE,GAAG,eAAvC,mBAKJ,yBACEhE,IAAI,qBACJJ,UAAU,QACVM,IAAI,iBAIR,yBAAKN,UAAU,qBACb,yBAAKA,UAAU,WACb,sDACA,uDACA,kBAAC,IAAD,CAAMG,GAAG,UACP,4BAAQH,UAAU,kBAAkBoE,GAAG,eAAvC,uBAKJ,yBAAKhE,IAAI,eAAeJ,UAAU,QAAQM,IAAI,0B,GAtQrCuC,a,iBC+BR2B,EA/BK,WAClB,OACE,6BACE,yBAAKxE,UAAU,8BACb,2BACEI,IAAKqE,IACLC,UAAU,EACVC,MAAM,EACNC,OAAO,EACPC,aAAa,EACbC,WAAS,SAGX,yBAAK9E,UAAU,+BACb,wCACW,0BAAMA,UAAU,mBAAhB,SADX,SAGA,oGAEQ,6BAFR,2CAKA,kBAAC,IAAD,CAAMA,UAAU,8BAA8BG,GAAG,WAAjD,gBCiMK4E,E,4MAvNblD,MAAQ,CACNJ,SAAU,I,EAYZqC,aAAe,SAACT,GAAO,IACf5B,EAAa,EAAKI,MAAlBJ,SACNA,EAAQ,eAAQA,EAAR,eAAmB4B,EAAEU,OAAOtD,KAAO4C,EAAEU,OAAOC,QACpD,EAAK1B,SAAS,CAAEb,c,EAGlB2B,aAAe,SAACC,GACdA,EAAEC,iBADkB,IAEZ7B,EAAa,EAAKI,MAAlBJ,SACRS,QAAQC,IAAIV,GACZD,EAAeC,GAAUO,MAAK,SAACC,GAC7BC,QAAQC,IAAIF,O,uDAKd,OACE,6BAASjC,UAAU,cACjB,wBAAIA,UAAU,iFAAd,sBAGA,yBAAKA,UAAU,wCACb,yBACEA,UAAU,+CACVI,IAAI,qBACJE,IAAI,gBAEN,yBAAKN,UAAU,4BACb,0BACEA,UAAU,0BACVkE,SAAU3B,KAAKa,cAGf,yBAAKpD,UAAU,6BACb,2BACEA,UAAU,6CACVgF,QAAQ,UAFV,WAMA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACf9D,UAAU,WACVoE,GAAG,SACH7D,KAAK,OACLE,KAAK,SACL6D,YAAY,gBAMlB,yBAAKtE,UAAU,+DACb,2BACEA,UAAU,6CACVgF,QAAQ,eAFV,mBAMA,6BACE,8BACEb,SAAU5B,KAAKuB,aACfrD,KAAK,cACLT,UAAU,cACViF,KAAK,IACLb,GAAG,cACHE,YAAY,gDAMlB,yBAAKtE,UAAU,+DACb,2BACEA,UAAU,6CACVgF,QAAQ,SAFV,UAMA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,QACLT,UAAU,WACVoE,GAAG,QACH7D,KAAK,OACL+D,YAAY,uCAMlB,yBAAKtE,UAAU,uCACb,2BACEA,UAAU,8CACVgF,QAAQ,WAFV,aAMA,yBAAKhF,UAAU,gBAAgBQ,UAAQ,QACrC,yBAAKR,UAAU,kBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,UACLT,UAAU,WACVO,KAAK,SACL+D,YAAY,gBAGhB,yBAAKtE,UAAU,iCACb,4BACES,KAAK,mBACLT,UAAU,YACVoE,GAAG,mBACHD,SAAU5B,KAAKuB,cAEf,4BAAQS,aAAa,QAArB,oBACA,sCACA,0CAOR,yBAAKvE,UAAU,gCACb,uBAAGA,UAAU,+BAAb,8BAGA,yBAAKA,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,UAAzC,WAGA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,SACLT,UAAU,WACVoE,GAAG,SACH7D,KAAK,SACL+D,YAAY,SAIlB,yBAAKtE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,iBAAzC,kBAGA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,gBACLT,UAAU,WACVoE,GAAG,gBACH7D,KAAK,SACL+D,YAAY,SAIlB,yBAAKtE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,aAAzC,iBAGA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,YACLT,UAAU,WACVoE,GAAG,YACH7D,KAAK,SACL+D,YAAY,SAIlB,yBAAKtE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,iBAAzC,gBAGA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,gBACLT,UAAU,WACVoE,GAAG,gBACH7D,KAAK,SACL+D,YAAY,uBAKpB,4BAAQtE,UAAU,yCAAlB,kB,GA7Ma6C,aC8HZqC,E,4MA9HbrD,MAAQ,CACNsD,OAAQ,I,EAGV/B,aAAe,SAACC,GAEdA,EAAEC,kB,EAGJQ,aAAe,SAACT,GAAO,IACf8B,EAAW,EAAKtD,MAAhBsD,OACNA,EAAM,eAAQA,EAAR,eAAiB9B,EAAEU,OAAOtD,KAAO4C,EAAEU,OAAOC,QAChD,EAAK1B,SAAS,CAAE6C,WAChBjD,QAAQC,IAAIgD,I,uDAIZ,OACE,6BAASnF,UAAU,cACjB,wBAAIA,UAAU,iFAAd,gBAGA,yBAAKA,UAAU,wCACb,yBACEA,UAAU,mCACVI,IAAI,yBACJE,IAAI,gBAGN,yBAAKN,UAAU,4BACb,0BAAMA,UAAU,0BAA0BkE,SAAU3B,KAAKa,cAEvD,yBAAKpD,UAAU,6BACb,2BACEA,UAAU,6CACVgF,QAAQ,UAFV,WAMA,yBAAKhF,UAAU,oBACb,2BACAmE,SAAU5B,KAAKuB,aACbrD,KAAK,SACLT,UAAU,WACVoE,GAAG,oBACH7D,KAAK,OACL+D,YAAY,gBAMlB,yBAAKtE,UAAU,+DACb,2BACEA,UAAU,6CACVgF,QAAQ,eAFV,mBAMA,6BACE,8BACAb,SAAU5B,KAAKuB,aACbrD,KAAK,cACL2D,GAAG,cACHpE,UAAU,cACViF,KAAK,IACLX,YAAY,gDAMlB,yBAAKtE,UAAU,uCACb,2BACEA,UAAU,8CACVgF,QAAQ,YAFV,aAMA,yBAAKhF,UAAU,gBAAgBQ,UAAQ,QACrC,yBAAKR,UAAU,kBACb,2BACAmE,SAAU5B,KAAKuB,aACb9D,UAAU,WACVO,KAAK,OACL+D,YAAY,gBAGhB,yBAAKtE,UAAU,iCACb,4BAAQA,UAAU,YAAYoE,GAAG,YAC/B,sCACA,sCACA,kDAOR,yBAAKpE,UAAU,+DACb,2BACEA,UAAU,6CACVgF,QAAQ,qBAFV,oBAMA,6BACE,8BACEhF,UAAU,cACViF,KAAK,IACLX,YAAY,qKAIlB,yBAAKtE,UAAU,iCACf,4BAAQA,UAAU,yCAAlB,kB,GApHW6C,aC2NVuC,E,4MA1NbvD,MAAQ,CACNwD,QAAS,I,EAGXjC,aAAe,a,EACfU,aAAe,SAACT,GAAO,IACfgC,EAAY,EAAKxD,MAAjBwD,QACNA,EAAO,eAAQA,EAAR,eAAkBhC,EAAEU,OAAOtD,KAAO4C,EAAEU,OAAOC,QAClD,EAAK1B,SAAS,CAAE+C,YAChBnD,QAAQC,IAAIkD,I,uDAIZ,OACE,6BAASrF,UAAU,cACjB,wBAAIA,UAAU,iFAAd,6BAGA,yBAAKA,UAAU,wCACb,yBACEA,UAAU,mCACVI,IAAI,wBACJE,IAAI,gBAGN,yBAAKN,UAAU,4BACb,0BAAMA,UAAU,0BAA0BkE,SAAU3B,KAAKa,cAEvD,yBAAKpD,UAAU,6BACb,2BACEA,UAAU,6DACVgF,QAAQ,UAFV,WAMA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,SACLT,UAAU,WACVoE,GAAG,SACH7D,KAAK,OACL+D,YAAY,gBAKlB,yBAAKtE,UAAU,gCAEb,yBAAKA,UAAU,2BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,QAAzC,SAGA,yBAAKhF,UAAU,iCACb,4BACEA,UAAU,YACVoE,GAAG,OACH3D,KAAK,OACL0D,SAAU5B,KAAKuB,cAEf,4BAAQS,aAAa,QAArB,QACA,4CACA,gDAMN,yBAAKvE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,sBAAzC,uBAGA,yBAAKhF,UAAU,iCACb,4BACEA,UAAU,YACVoE,GAAG,qBACH3D,KAAK,qBACL0D,SAAU5B,KAAKuB,cAEf,4BAAQS,aAAa,QAArB,sBACA,wCACA,4CACA,wCACA,4CACA,kDAMN,yBAAKvE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,YAAzC,aAGA,yBAAKhF,UAAU,iCACb,4BACEA,UAAU,YACVoE,GAAG,WACH3D,KAAK,WACL0D,SAAU5B,KAAKuB,cAEf,4BAAQS,aAAa,QAArB,YACA,+CACA,0DACA,iDACA,4DACA,oDAMN,yBAAKvE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,qBAAzC,yBAGA,yBAAKhF,UAAU,iCACb,4BACEA,UAAU,YACVoE,GAAG,oBACH3D,KAAK,oBACL0D,SAAU5B,KAAKuB,cAEf,4BAAQS,aAAa,QAArB,wBACA,qCACA,qCACA,qCACA,qCACA,wCAMN,yBAAKvE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,iBAAzC,kBAGA,yBAAKhF,UAAU,iCACb,4BACEA,UAAU,YACVoE,GAAG,gBACH3D,KAAK,gBACL0D,SAAU5B,KAAKuB,cAEf,4BAAQS,aAAa,QAArB,iBACA,+CACA,+CACA,kDACA,wDACA,oDAMN,yBAAKvE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,QAAzC,SAGA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,OACLT,UAAU,WACVoE,GAAG,OACH7D,KAAK,SACL+D,YAAY,WAMlB,yBAAKtE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,aAAzC,WAGA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,YACLT,UAAU,WACVoE,GAAG,YACH7D,KAAK,SACL+D,YAAY,YAMlB,yBAAKtE,UAAU,0BACb,2BAAOA,UAAU,gBAAgBgF,QAAQ,WAAzC,SAGA,yBAAKhF,UAAU,oBACb,2BACEmE,SAAU5B,KAAKuB,aACfrD,KAAK,UACLT,UAAU,WACVoE,GAAG,UACH7D,KAAK,SACL+D,YAAY,aAMpB,4BAAQtE,UAAU,yCAAlB,kB,GAhNsB6C,aCoBrByC,EAbA,kBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWjB,IACxC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,aAAaC,UAAW7D,IAC1C,kBAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,4BAA4BC,UAAWV,IAEzD,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,wBAAwBC,UAAWP,IACrD,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,wBAAwBC,UAAWL,IACrD,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,SAASC,UAAWtC,IACtC,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,UAAUC,UAAWtC,MCJhCuC,MATf,WACE,OACE,yBAAK1F,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGc2F,QACW,cAA7BC,OAAOpC,SAASqC,UAEe,UAA7BD,OAAOpC,SAASqC,UAEhBD,OAAOpC,SAASqC,SAASC,MACvB,2D,4CCRNC,IAAMC,IAAIC,KAEV,IAAMC,EAAa,kBACjB,kBAAC,IAAD,KACE,kBAAC,EAAD,QAIJC,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,SDiHlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzE,MAAK,SAAA0E,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3E,QAAQ2E,MAAMA,EAAMC,c","file":"static/js/main.36cd9006.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SmartMacrosLogo.cfbbf4b3.png\";","module.exports = __webpack_public_path__ + \"static/media/SmartMacrosLogo.5d869966.mp4\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../assets/SmartMacrosLogo.png\"\n\nconst Navbar = () => {\n  const user = {};\n  const logout = () => {}\n  return (\n    <header>\n      <nav\n        className=\"uk-navbar-container uk-navbar-transparent navbar-container\"\n        uk-navbar=\"true\"\n      >\n        {user._id ? (\n          <div className=\"uk-navbar-left uk-background-contain uk-background-muted\">\n            <ul className=\"uk-navbar-nav\">\n              <li className=\"uk-active\">\n                <Link to=\"/home\" className=\"uk-logo uk-background-contain\">\n                  <img src={logo} alt=\"SmartMacros's App\" />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        ) : (\n          <div className=\"uk-navbar-left smart-logo\">\n            <ul className=\"uk-navbar-nav\">\n              <li className=\"uk-active\">\n                <Link to=\"/\">\n                <img className=\"\" src={logo} alt=\"SmartMacros's App\" />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        )}\n\n        {user._id ? (\n          <div className=\"uk-navbar-right\">\n            <ul className=\"uk-navbar-nav\">\n              <li>\n                <div className=\"uk-inline\">\n                  <button\n                    className=\"uk-button uk-button-transparent\"\n                    type=\"button\"\n                  >\n                    <div\n                      className=\"uk-grid-small uk-flex-middle\"\n                      uk-grid=\"true\"\n                    >\n                      <div className=\"uk-width-auto\">\n                        <img\n                          className=\"uk-border-circle\"\n                          alt={user.name}\n                          src={user.avatar || \"https://api.adorable.io/avatars/80/abott@adorable.png\"}\n                        />\n                      </div>\n                      <div className=\"uk-width-expand\">\n                        <div className=\"uk-margin-remove-bottom uk-user\">\n                          {user.name}\n                        </div>\n                      </div>\n                    </div>{\" \"}\n                  </button>\n                  <div uk-dropdown=\"pos: bottom-justify\">\n                    <ul className=\"uk-nav uk-dropdown-nav\">\n                      <li className=\"uk-nav-header\">\n                        <Link to=\"/profile\">\n                          <span\n                            className=\"uk-margin-small-right\"\n                            uk-icon=\"icon: user\"\n                          ></span>{\" \"}\n                          Profile\n                        </Link>\n                      </li>\n\n                      <li className=\"uk-nav-header\" onClick={logout}>\n                        <Link to=\"\">\n                          <span\n                            className=\"uk-margin-small-right\"\n                            uk-icon=\"icon: sign-out\"\n                          ></span>\n                          Logout\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        ) : (\n          <div className=\"uk-navbar-right\">\n            <ul className=\"uk-navbar-nav\">\n              <li>\n                <Link to=\"/signup\">\n                  Registrate\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/login\">\n                  Iniciar sesion\n                </Link>\n              </li>\n            </ul>\n          </div>\n        )}\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Card = ({\n  Nombre,\n  Porcion,\n  Unidad_de_medida,\n  Grasas,\n  Carbohidratos,\n  Proteinas,\n  Calorias_kcal,\n}) => (\n  <div className=\"uk-grid-small uk-grid-match\" uk-grid=\"true\">\n    <div>\n      <div className=\"uk-card uk-card-hover uk-card-body card-container\">\n        <h6 className=\"card-title\">{Nombre}</h6>\n        <p>Informacion nutricional:</p>\n        <ul class=\"card-text uk-list uk-text-left uk-list-collapse\">\n          <li>Contenido calorico: {Calorias_kcal} kcal</li>\n          <li>Carbohidratos: {Carbohidratos} gr</li>\n          <li>Proteinas: {Proteinas} gr</li>\n          <li>Grasas: {Grasas} gr</li>\n        </ul>\n        <p className=\"card-text uk-text-right\">\n          Por cada: {Porcion} {Unidad_de_medida}\n        </p>\n        <div className=\"uk-card-footer ver-mas\">\n        <Link to=\"#\" className=\"uk-button-text uk-light\">\n          Ver detalles\n        </Link>\n      </div>\n      </div>\n \n    </div>\n  </div>\n);\n\nexport default Card;\n","export const isProd = process.env.NODE_ENV === \"production\";\nexport const base_url = isProd\n  ? \"https://smart-macros.herokuapp.com/api\"\n  : \"http://localhost:3000/api\";\n","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\nexport const getAlimentos = () => {\n    return axios.get(`${base_url}/alimentos/`);\n};\n\nexport const createAlimento = (alimento) => {\n    return axios.post(`${base_url}/crear-alimento`, alimento);\n}","import React, { Component } from \"react\";\nimport Card from \"../Card\";\nimport { getAlimentos } from \"../../Services/alimentosService\";\n\nclass Alimentos extends Component {\n  state = {\n    alimentos: [],\n  };\n\n  //Tengo que hacer la peticion de los alimentos de la db en componentDidMount(), porque necesito\n  //esa informacion antes de que se renderice la vista de los alimentos:\n  componentDidMount() {\n      getAlimentos().then(res => {\n        console.log(res)\n          //Vamos a sacar lo que hay en la llave de results de la consola, le daremos el alias de products y lo setearemos en el estado\n        const { result: alimentos} = res.data;\n        this.setState({ alimentos })\n      })\n  }\n\n  render() {\n    return (\n      <section className=\"uk-section\">\n        <div className=\"uk-container\">\n          <div className=\"uk-grid uk-grid-small uk-grid-match uk-child-width-1-3\">\n            {this.state.alimentos.length > 0 ? (\n              this.state.alimentos.map((alimento, index) => (\n                <Card key={index} {...alimento} />\n              ))\n            ) : (\n              <div className=\"uk-alert-primary\" uk-alert=\"true\">\n                <p>No hay alimentos.</p>\n                <p>PON BOTON PARA CREAR ALIMENTO QUE NOS LLEVE A SU FORMULARIO</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Alimentos;\n","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const login = (credentials) => {\n    return axios.post(`${base_url}/users/login`, credentials);\n}\n\nexport const signup = (credentials) => {\n    return axios.post(`${base_url}/users/signup`, credentials);\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { login, signup } from \"../../Services/authService\";\n\nclass AuthForm extends Component {\n  state = {\n    user: {},\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { user } = this.state;\n    const isLogin = this.props.location.pathname === \"/login\";\n    const action = isLogin ? login : signup;\n    action(user).then((res) => {\n      //convertimos al usuario en string para poder almacenarlo en localStorage (no recibe obj)\n      const { user } = res.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    });\n  };\n  handleChange = (e) => {\n    let { user } = this.state;\n    user = { ...user, [e.target.name]: e.target.value };\n    this.setState({ user });\n  };\n  render() {\n    const isLogin = this.props.location.pathname === \"/login\";\n    return (\n      <div className=\"container\">\n        <div className=\"forms-container\">\n          {isLogin ? (\n            <div className=\"signin\">\n              <form onSubmit={this.handleSubmit} className=\"sign-in-form\">\n                <h2 className=\"title\">Iniciar sesión</h2>\n\n                {/* Correo */}\n                <div className=\"input-field\">\n                  <i className=\"fas fa-user\"></i>\n                  <input\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    id=\"email\"\n                    required={true}\n                    type=\"email\"\n                    placeholder=\"Correo\"\n                  />\n                </div>\n\n                {/* Contraseña */}\n                <div className=\"input-field\">\n                  <i className=\"fas fa-lock\"></i>\n                  <input\n                    onChange={this.handleChange}\n                    name=\"password\"\n                    id=\"password\"\n                    required={true}\n                    type=\"password\"\n                    placeholder=\"Contraseña\"\n                  />\n                </div>\n                <input type=\"submit\" value=\"Login\" className=\"btn solid\" />\n              </form>\n            </div>\n          ) : (\n            <div className=\"signup\">\n              <div className=\"sign-up-form-container\">\n                <h2 className=\"title\">Regístrate</h2>\n                <form onSubmit={this.handleSubmit} className=\"sign-up-form\">\n                  {/* Nombre */}\n                  <div className=\"input-field-signup\">\n                    <i className=\"fas fa-user\"></i>\n                    <input\n                      onChange={this.handleChange}\n                      name=\"nombre\"\n                      id=\"nombre\"\n                      type=\"text\"\n                      placeholder=\"Nombre\"\n                      required={true}\n                    />\n                  </div>\n\n                  {/* Correo */}\n                  <div className=\"input-field-signup\">\n                    <i className=\"fas fa-envelope\"></i>\n                    <input\n                      onChange={this.handleChange}\n                      name=\"email\"\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"Correo\"\n                      required={true}\n                    />\n                  </div>\n\n                  {/* Contraseña */}\n                  <div className=\"input-field-signup\">\n                    <i className=\"fas fa-envelope\"></i>\n                    <input\n                      onChange={this.handleChange}\n                      name=\"password\"\n                      id=\"password\"\n                      type=\"password\"\n                      placeholder=\"Contraseña\"\n                      required={true}\n                    />\n                  </div>\n\n                  {/* Sexo */}\n                  <select\n                    className=\"input-field-signup option-text\"\n                    name=\"sexo\"\n                    id=\"sexo\"\n                    onChange={this.handleChange}\n                    required={true}\n                  >\n                    <option defaultValue=\"true\">Sexo</option>\n                    <option>Femenino</option>\n                    <option>Masculino</option>\n                  </select>\n\n                  {/* Edad */}\n                  <div className=\"input-field-signup\">\n                    <i className=\"fas fa-envelope\"></i>\n                    <input\n                      onChange={this.handleChange}\n                      name=\"edad\"\n                      id=\"edad\"\n                      type=\"number\"\n                      placeholder=\"Edad\"\n                      required={true}\n                    />\n                  </div>\n\n                  {/* Altura */}\n                  <div className=\"input-field-signup\">\n                    <i className=\"fas fa-envelope\"></i>\n                    <input\n                      onChange={this.handleChange}\n                      name=\"altura_cm\"\n                      id=\"altura_cm\"\n                      type=\"number\"\n                      placeholder=\"Estatura en cm\"\n                      required={true}\n                    />\n                  </div>\n\n                  {/* Peso */}\n                  <div className=\"input-field-signup\">\n                    <i className=\"fas fa-envelope\"></i>\n                    <input\n                      onChange={this.handleChange}\n                      name=\"peso_kg\"\n                      id=\"peso_kg\"\n                      type=\"number\"\n                      placeholder=\"Peso en kg\"\n                      required={true}\n                    />\n                  </div>\n\n                  {/* Nivel de actividad */}\n                  <select\n                    className=\"input-field-signup option-text\"\n                    name=\"nivel_de_actividad\"\n                    id=\"nivel_de_actividad\"\n                    onChange={this.handleChange}\n                    required={true}\n                  >\n                    <option defaultValue=\"true\">Actividad</option>\n                    <option>Bajo</option>\n                    <option>Moderado</option>\n                    <option>Alto</option>\n                    <option>Muy alto</option>\n                    <option>Hiperactivo</option>\n                  </select>\n\n                  {/* Objetivo */}\n                  <select\n                    className=\"input-field-signup option-text\"\n                    name=\"objetivo\"\n                    id=\"objetivo\"\n                    onChange={this.handleChange}\n                    required={true}\n                  >\n                    <option defaultValue=\"true\">Objetivo</option>\n                    <option>Perder peso</option>\n                    <option>Perder peso lentamente</option>\n                    <option>Mantener peso</option>\n                    <option>Aumentar peso lentamente</option>\n                    <option>Aumentar peso</option>\n                  </select>\n\n                  {/* Numero de comidas */}\n                  <select\n                    className=\"input-field-signup option-text\"\n                    name=\"numero_de_comidas\"\n                    id=\"numero_de_comidas\"\n                    onChange={this.handleChange}\n                    required={true}\n                  >\n                    <option defaultValue=\"true\">Comidas</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </select>\n\n                  {/* Tipo de dieta */}\n                  <div className=\"uk-flex-center uk-flex-column\">\n                    <select\n                      className=\"input-field-signup uk-width-1-1 uk-margin-remove-left option-text\"\n                      name=\"tipo_de_dieta\"\n                      id=\"tipo_de_dieta\"\n                      onChange={this.handleChange}\n                      required={true}\n                    >\n                      <option defaultValue=\"true\">Dieta</option>\n                      <option>Estandar</option>\n                      <option>Equilibrada</option>\n                      <option>Baja en grasas</option>\n                      <option>Alta en proteinas</option>\n                      <option>Cetogenica</option>\n                    </select>\n                    <button type=\"submit\" className=\"btn solid\">\n                      Registrarse\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"panels-container\">\n          {isLogin ? (\n            <div className=\"panel left-panel\">\n              <div className=\"content\">\n                <h3>¿Aún no tienes cuenta?</h3>\n                <p className=\"uk-text-justify\">\n                  Calcula tus calorías y registra tu diario de alimentos de\n                  forma fácil y sencilla. ¡Come lo que quieras! Siempre\n                  respetando tus objetivos de carbohidratos, proteínas y grasas.\n                </p>\n                <Link to=\"/signup\">\n                  <button className=\"btn transparent\" id=\"sign-up-btn\">\n                    Regístrate\n                  </button>\n                </Link>\n              </div>\n              <img\n                src=\"../registrarse.svg\"\n                className=\"image\"\n                alt=\"registrarse\"\n              />\n            </div>\n          ) : (\n            <div className=\"panel right-panel\">\n              <div className=\"content\">\n                <h3>¿Tienes una cuenta?</h3>\n                <p>¡Bienvenido de nuevo!</p>\n                <Link to=\"/login\">\n                  <button className=\"btn transparent\" id=\"sign-in-btn\">\n                    Iniciar sesión\n                  </button>\n                </Link>\n              </div>\n              <img src=\"../login.svg\" className=\"image\" alt=\"iniciar sesion\" />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AuthForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cover from \"../../assets/SmartMacrosLogo.mp4\";\n\nconst LandingPage = () => {\n  return (\n    <div>\n      <div className=\"uk-cover-container uk-hero\">\n        <video\n          src={cover}\n          autoPlay={true}\n          loop={true}\n          muted={true}\n          playsInline={true}\n          uk-cover=\"true\"\n        ></video>\n\n        <div className=\"uk-position-center uk-light\">\n          <h1>\n            Find the <span className=\"uk-text-warning\">ideal</span> dog.\n          </h1>\n          <p>\n            Dog lovers rejoice! Waggy's helps you find an ideal dog to take\n            home, <br />\n            or find the perfect match for your dog.\n          </p>\n          <Link className=\"uk-button uk-button-primary\" to=\"/signup\">\n            Join now\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;","import React, { Component } from \"react\";\nimport { createAlimento } from \"../../../Services/alimentosService\";\n\nclass AlimentoForm extends Component {\n  state = {\n    alimento: {},\n  };\n\n  //Vamos a tener que aprender a manejar eventos que pasan en el input. Cada que escribimos en el\n  //input va a haber un evento que se llama onChange, que nos va a permitir captar cual es el valor\n  //que esta poniendo el usuario en el input y almacenarlo en el estado para despues mandarlo al\n  //backend\n  //Aqui es donde se va a empezar a hacer un FILTRO para cuando lo ocupes:\n  //Cuando estas escribiendo en el hadleChange vas a ir filtrando todos los elementos con base en\n  //el nombre. Entonces, se va a comparar \"Si el nombre contiene las letras que te estoy pasando\n  //entonces si lo agregas como un resultado posible\"\n\n  handleChange = (e) => {\n    let { alimento } = this.state;\n    alimento = { ...alimento, [e.target.name]: e.target.value };\n    this.setState({ alimento });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { alimento } = this.state;\n    console.log(alimento);\n    createAlimento(alimento).then((res) => {\n      console.log(res);\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"uk-section\">\n        <h4 className=\" forms-title ver-mas uk-padding-small uk-light uk-text-uppercase uk-text-bold\">\n          Registrar alimento\n        </h4>\n        <div className=\"uk-container uk-flex uk-flex-between\">\n          <img\n            className=\"form-image container form-shadow uk-padding \"\n            src=\"../../alimento.svg\"\n            alt=\"user update\"\n          />\n          <div className=\"uk-width-1-2 form-shadow\">\n            <form\n              className=\"uk-width-1-1 uk-padding\"\n              onSubmit={this.handleSubmit}\n            >\n              {/*Nombre*/}\n              <div className=\"uk-width-1-1 uk-text-left\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left\"\n                  htmlFor=\"Nombre\"\n                >\n                  Nombre:\n                </label>\n                <div className=\"uk-form-controls\">\n                  <input\n                    onChange={this.handleChange}\n                    className=\"uk-input\"\n                    id=\"Nombre\"\n                    type=\"text\"\n                    name=\"Nombre\"\n                    placeholder=\"Nombre...\"\n                  />\n                </div>\n              </div>\n\n              {/* Descripción*/}\n              <div className=\"uk-margin uk-width-1-1 uk-text-left uk-margin-remove-bottom\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left\"\n                  htmlFor=\"Descripcion\"\n                >\n                  Descripción:\n                </label>\n                <div>\n                  <textarea\n                    onChange={this.handleChange}\n                    name=\"Descripcion\"\n                    className=\"uk-textarea\"\n                    rows=\"5\"\n                    id=\"Descripcion\"\n                    placeholder=\"Descripción del alimento (opcional)...\"\n                  ></textarea>\n                </div>\n              </div>\n\n              {/* Marca */}\n              <div className=\"uk-margin uk-width-1-1 uk-text-left uk-margin-remove-bottom\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left\"\n                  htmlFor=\"Marca\"\n                >\n                  Marca:\n                </label>\n                <div className=\"uk-form-controls\">\n                  <input\n                    onChange={this.handleChange}\n                    name=\"Marca\"\n                    className=\"uk-input\"\n                    id=\"Marca\"\n                    type=\"text\"\n                    placeholder=\"Marca del alimento (opcional)...\"\n                  />\n                </div>\n              </div>\n\n              {/* Porcion */}\n              <div className=\"uk-margin uk-width-1-1 uk-text-left\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left \"\n                  htmlFor=\"Porcion\"\n                >\n                  Cantidad:\n                </label>\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\n                  <div className=\"uk-width-1-2@s\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"Porcion\"\n                      className=\"uk-input\"\n                      type=\"number\"\n                      placeholder=\"Porción\"\n                    />\n                  </div>\n                  <div className=\"uk-form-controls uk-width-1-2\">\n                    <select\n                      name=\"Unidad_de_medida\"\n                      className=\"uk-select\"\n                      id=\"Unidad_de_medida\"\n                      onChange={this.handleChange}\n                    >\n                      <option defaultValue=\"true\">Unidad de medida</option>\n                      <option>gr</option>\n                      <option>ml</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              {/*Información nutricional */}\n              <div className=\"uk-form-horizontal uk-margin\">\n                <p className=\"uk-text-emphasis forms-font\">\n                  Información nutricional\n                </p>\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"Grasas\">\n                    Grasas:\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"Grasas\"\n                      className=\"uk-input\"\n                      id=\"Grasas\"\n                      type=\"number\"\n                      placeholder=\"gr\"\n                    />\n                  </div>\n                </div>\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"Carbohidratos\">\n                    Carbohidratos:\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"Carbohidratos\"\n                      className=\"uk-input\"\n                      id=\"Carbohidratos\"\n                      type=\"number\"\n                      placeholder=\"gr\"\n                    />\n                  </div>\n                </div>\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"Proteinas\">\n                    Proteínas:\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"Proteinas\"\n                      className=\"uk-input\"\n                      id=\"Proteinas\"\n                      type=\"number\"\n                      placeholder=\"gr\"\n                    />\n                  </div>\n                </div>\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"Calorias_kcal\">\n                    Calorías:\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"Calorias_kcal\"\n                      className=\"uk-input\"\n                      id=\"Calorias_kcal\"\n                      type=\"number\"\n                      placeholder=\"kcal (opcional)\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <button className=\"ver-mas uk-padding-small uk-light btn\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default AlimentoForm;\n","import React, { Component } from \"react\";\n\nclass RecetaForm extends Component {\n  state = {\n    receta: {},\n  };\n\n  handleSubmit = (e) => {\n    //Para evitar que se refresque el navegador (comportamiento default de una form)\n    e.preventDefault();\n  }\n\n  handleChange = (e) => {\n    let { receta } = this.state;\n    receta = { ...receta, [e.target.name]: e.target.value };\n    this.setState({ receta });\n    console.log(receta);\n  };\n\n  render() {\n    return (\n      <section className=\"uk-section\">\n        <h4 className=\" forms-title ver-mas uk-padding-small uk-light uk-text-uppercase uk-text-bold\">\n          Crear receta\n        </h4>\n        <div className=\"uk-container uk-flex uk-flex-between\">\n          <img\n            className=\"form-image container form-shadow\"\n            src=\"../../crear-receta.svg\"\n            alt=\"user update\"\n          />\n\n          <div className=\"uk-width-1-2 form-shadow\">\n            <form className=\"uk-width-1-1 uk-padding\" onSubmit={this.handleSubmit}>\n              {/*Nombre*/}\n              <div className=\"uk-width-1-1 uk-text-left\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left\"\n                  htmlFor=\"Nombre\"\n                >\n                  Nombre:\n                </label>\n                <div className=\"uk-form-controls\">\n                  <input\n                  onChange={this.handleChange}\n                    name=\"Nombre\"\n                    className=\"uk-input\"\n                    id=\"form-stacked-text\"\n                    type=\"text\"\n                    placeholder=\"Nombre...\"\n                  />\n                </div>\n              </div>\n\n              {/* Descripción*/}\n              <div className=\"uk-margin uk-width-1-1 uk-text-left uk-margin-remove-bottom\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left\"\n                  htmlFor=\"Descripcion\"\n                >\n                  Descripción:\n                </label>\n                <div>\n                  <textarea\n                  onChange={this.handleChange}\n                    name=\"Descripcion\"\n                    id=\"Descripcion\"\n                    className=\"uk-textarea\"\n                    rows=\"5\"\n                    placeholder=\"Descripción del alimento (opcional)...\"\n                  ></textarea>\n                </div>\n              </div>\n\n              {/* Cantidad */}\n              <div className=\"uk-margin uk-width-1-1 uk-text-left\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left \"\n                  htmlFor=\"Cantidad\"\n                >\n                  Cantidad:\n                </label>\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\n                  <div className=\"uk-width-1-2@s\">\n                    <input\n                    onChange={this.handleChange}\n                      className=\"uk-input\"\n                      type=\"text\"\n                      placeholder=\"Porción\"\n                    />\n                  </div>\n                  <div className=\"uk-form-controls uk-width-1-2\">\n                    <select className=\"uk-select\" id=\"Cantidad\">\n                      <option>gr</option>\n                      <option>ml</option>\n                      <option>contenedor</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              {/* Descripción*/}\n              <div className=\"uk-margin uk-width-1-1 uk-text-left uk-margin-remove-bottom\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left\"\n                  htmlFor=\"form-stacked-text\"\n                >\n                  A;adir alimento:\n                </label>\n                <div>\n                  <textarea\n                    className=\"uk-textarea\"\n                    rows=\"5\"\n                    placeholder=\"Como le hago para que me aparezca un boton de a;adir alimento conforme voy agregando y que ese boton me inserte un alimento. Igual para los pasos de la receta\"\n                  ></textarea>\n                </div>\n              </div>\n              <div className=\"uk-form-horizontal uk-margin\"></div>\n              <button className=\"ver-mas uk-padding-small uk-light btn\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default RecetaForm;\n","import React, { Component } from \"react\";\n\nclass ActualizarUsuarioForm extends Component {\n  state = {\n    usuario: {},\n  };\n\n  handleSubmit = () => {}\n  handleChange = (e) => {\n    let { usuario } = this.state;\n    usuario = { ...usuario, [e.target.name]: e.target.value };\n    this.setState({ usuario });\n    console.log(usuario);\n  };\n\n  render() {\n    return (\n      <section className=\"uk-section\">\n        <h4 className=\" forms-title ver-mas uk-padding-small uk-light uk-text-uppercase uk-text-bold\">\n          Actualizar información\n        </h4>\n        <div className=\"uk-container uk-flex uk-flex-between\">\n          <img\n            className=\"form-image container form-shadow\"\n            src=\"../../user-update.svg\"\n            alt=\"user update\"\n          />\n\n          <div className=\"uk-width-1-2 form-shadow\">\n            <form className=\"uk-width-1-1 uk-padding\" onSubmit={this.handleSubmit}>\n              {/*Nombre*/}\n              <div className=\"uk-width-1-1 uk-text-left\">\n                <label\n                  className=\"uk-text-emphasis forms-font uk-margin-left uk-margin-right\"\n                  htmlFor=\"nombre\"\n                >\n                  Nombre:\n                </label>\n                <div className=\"uk-form-controls\">\n                  <input\n                    onChange={this.handleChange}\n                    name=\"nombre\"\n                    className=\"uk-input\"\n                    id=\"nombre\"\n                    type=\"text\"\n                    placeholder=\"Nombre...\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"uk-form-horizontal uk-margin\">\n                {/* Sexo */}\n                <div className=\"uk-margin uk-text-left \">\n                  <label className=\"uk-form-label\" htmlFor=\"sexo\">\n                    Sexo:\n                  </label>\n                  <div className=\"uk-form-controls uk-width-1-2\">\n                    <select\n                      className=\"uk-select\"\n                      id=\"sexo\"\n                      name=\"sexo\"\n                      onChange={this.handleChange}\n                    >\n                      <option defaultValue=\"true\">Sexo</option>\n                      <option>Femenino</option>\n                      <option>Masculino</option>\n                    </select>\n                  </div>\n                </div>\n\n                {/* Nivel de actividad */}\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"nivel_de_actividad\">\n                    Nivel de actividad:\n                  </label>\n                  <div className=\"uk-form-controls uk-width-1-2\">\n                    <select\n                      className=\"uk-select\"\n                      id=\"nivel_de_actividad\"\n                      name=\"nivel_de_actividad\"\n                      onChange={this.handleChange}\n                    >\n                      <option defaultValue=\"true\">Nivel de actividad</option>\n                      <option>Bajo</option>\n                      <option>Moderado</option>\n                      <option>Alto</option>\n                      <option>Muy alto</option>\n                      <option>Hiperactivo</option>\n                    </select>\n                  </div>\n                </div>\n\n                {/* Objetivo */}\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"objetivo\">\n                    Objetivo:\n                  </label>\n                  <div className=\"uk-form-controls uk-width-1-2\">\n                    <select\n                      className=\"uk-select\"\n                      id=\"objetivo\"\n                      name=\"objetivo\"\n                      onChange={this.handleChange}\n                    >\n                      <option defaultValue=\"true\">Objetivo</option>\n                      <option>Perder peso</option>\n                      <option>Perder peso lentamente</option>\n                      <option>Mantener peso</option>\n                      <option>Aumentar peso lentamente</option>\n                      <option>Aumentar peso</option>\n                    </select>\n                  </div>\n                </div>\n\n                {/* Número de comidas */}\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"numero_de_comidas\">\n                    Número de comidas:\n                  </label>\n                  <div className=\"uk-form-controls uk-width-1-2\">\n                    <select\n                      className=\"uk-select\"\n                      id=\"numero_de_comidas\"\n                      name=\"numero_de_comidas\"\n                      onChange={this.handleChange}\n                    >\n                      <option defaultValue=\"true\">Número de comidas</option>\n                      <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                    </select>\n                  </div>\n                </div>\n\n                {/* Tipo de dieta */}\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"tipo_de_dieta\">\n                    Tipo de dieta:\n                  </label>\n                  <div className=\"uk-form-controls uk-width-1-2\">\n                    <select\n                      className=\"uk-select\"\n                      id=\"tipo_de_dieta\"\n                      name=\"tipo_de_dieta\"\n                      onChange={this.handleChange}\n                    >\n                      <option defaultValue=\"true\">Tipo de dieta</option>\n                      <option>Estándar</option>\n                      <option>Equilibrada</option>\n                      <option>Baja en grasas</option>\n                      <option>Alta en proteínas</option>\n                      <option>Cetogénica</option>\n                    </select>\n                  </div>\n                </div>\n\n                {/* Edad */}\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"edad\">\n                    Edad:\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"edad\"\n                      className=\"uk-input\"\n                      id=\"edad\"\n                      type=\"number\"\n                      placeholder=\"Edad\"\n                    />\n                  </div>\n                </div>\n\n                {/* Altura */}\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"altura_cm\">\n                    Altura:\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"altura_cm\"\n                      className=\"uk-input\"\n                      id=\"altura_cm\"\n                      type=\"number\"\n                      placeholder=\"En cm\"\n                    />\n                  </div>\n                </div>\n\n                {/* Peso */}\n                <div className=\"uk-margin uk-text-left\">\n                  <label className=\"uk-form-label\" htmlFor=\"peso_kg\">\n                    Peso:\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"peso_kg\"\n                      className=\"uk-input\"\n                      id=\"peso_kg\"\n                      type=\"number\"\n                      placeholder=\"En kg\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <button className=\"ver-mas uk-padding-small uk-light btn\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ActualizarUsuarioForm;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Alimentos from \"./Components/Alimentos\"\nimport AuthForm from \"./Components/AuthForm\";\nimport LandingPage from \"./Components/Landing\";\nimport AlimentoForm from \"./Components/Forms/AlimentoForm/index\";\nimport RecetaForm from \"./Components/Forms/RecetaForm/index\";\nimport ActualizarUsuarioForm from \"./Components/Forms/ActualizarUsuarioForm/index\";\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/landing\" component={LandingPage}/>\n        <Route exact path=\"/alimentos\" component={Alimentos}/> \n        <Route exact path=\"/alimentos/crear-alimento\" component={AlimentoForm}/> \n        {/* <Route exact path=\"/recetas\" component={}/>  */}\n        <Route exact path=\"/recetas/crear-receta\" component={RecetaForm}/> \n        <Route exact path=\"/users/actualizar/:id\" component={ActualizarUsuarioForm}/> \n        <Route exact path=\"/login\" component={AuthForm}/> \n        <Route exact path=\"/signup\" component={AuthForm}/> \n    </Switch>\n)\n\nexport default Routes;","import React from 'react';\nimport Navbar from \"./Components/Navbar\"\nimport './App.css';\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport UIkit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"uikit/dist/css/uikit.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nUIkit.use(Icons);\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(<WithRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}